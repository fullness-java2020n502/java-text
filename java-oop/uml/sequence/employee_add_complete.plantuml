@startuml
' 【重要】UMLは「自分たちが作るクラス」を主に登場させる


title 社員登録完了時のシーケンス図

hide footbox

actor 人事部

' 活性区域: このインスタンスが主に処理している部分を強調する

' Servletコンテナ：JavaのWebアプリを実行する環境
' それに対してHTTPリクエストをする
人事部 -> Servletコンテナ : POST http://localhost:8080/emp_add/complete
activate Servletコンテナ

participant employee_add_complete_jsp

' ServletコンテナはURLとHTTPメソッド（POST or GET）に合わせてサーブレットを呼び出す
Servletコンテナ -> EmployeeAddCompleteServlet : doPost()
activate EmployeeAddCompleteServlet

' ServletはServiceを呼び出して登録処理を行う
EmployeeAddCompleteServlet -> EmployeeService : add(Employee)
activate EmployeeService

' ServiceはDAOを呼び出して登録処理を委譲する
EmployeeService -> EmployeeDAO : insert(Employee)
activate EmployeeDAO

' DAOはDBに対してinsert文を発行する
database DB_Employeeテーブル
EmployeeDAO -> DB_Employeeテーブル : INSERT文
activate DB_Employeeテーブル

' DBはDAOに更新件数のintを返す
DB_Employeeテーブル --> EmployeeDAO : int
deactivate DB_Employeeテーブル

' DAOはServiceに更新件数を返す
EmployeeDAO --> EmployeeService : int
deactivate EmployeeDAO

' ServiceはServletに更新件数を返す
EmployeeService --> EmployeeAddCompleteServlet : int
deactivate EmployeeService

EmployeeAddCompleteServlet -> EmployeeAddCompleteServlet : 結果のチェック
note right : 結果が0の場合は例外送出

' ServletがJSPにforwardする
EmployeeAddCompleteServlet -> employee_add_complete_jsp : forward
deactivate EmployeeAddCompleteServlet
activate employee_add_complete_jsp

' JSPがコンテナに対してHTMLを返却
employee_add_complete_jsp -> Servletコンテナ : 登録完了画面HTML
deactivate employee_add_complete_jsp

' コンテナが人事部に対して画面をブラウザにHTTPレスポンスとして返す
Servletコンテナ -> 人事部 : 登録完了画面
deactivate Servletコンテナ

@enduml